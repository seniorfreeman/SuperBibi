
template(name="aside")
	aside
		header
			div(class="squaredThree")
				input(type="checkbox", value="None", id="todoAsideEffectue{{currentTodo._id}}",data='{{currentTodo._id}}', name="asideChecked")
				label(for="todoAsideEffectue{{currentTodo._id}}")
			textarea(placeholder="Titre de votre tache", id="todoTitle")
					| {{currentTodo.title}}
			if currentTodo.priority
				.star.active(id="prioritaire")
					i.fa.fa-star-o
					i.fa.fa-star
			else
				.star(id="prioritaire")
					i.fa.fa-star-o
					i.fa.fa-star

		article
			ul(class="whiteGroup")
				li.echeance
					i.picto
					input.datetimepicker(type="text", id="todoEcheance",placeholder="Définir une échéance" value="{{formatDate(getDeadLineDate)}}")
					span
						button D
			ul
				li.notifier
					i.picto
					h2
						| {{_ "taskNotificationLabel"}}
					input(type="range", id="allowNotification", min="0", max="1", class="slider{{#if allowNotification}} bg-green{{/if}}", value="{{allowNotification}}")
					br.clearFix

				li.participants
					i.picto
					h2
						| {{_ "taskParticipants"}}
					ul
						each friends
							{{> todo_friend}}
					div.addParticipant
						span
							i.fa.fa-plus
						{{> inputAutocomplete settings=settings id="newParticipant" class="form-control" name="newParticipant" placeholder=taskParticipantAutocomplete }}
						i.clearFix

				li.conseils
					i.picto
					h2
						| {{_ "taskAdvices"}}
					textarea(placeholder="Vos notes", id="conseils")
						| {{currentTodo.advise}}
					i.clearFix

				if currentTodo.files
					li.fichiers
						i.picto
						h2
							| {{_ "taskFiles"}}
						ul
							each file in currentTodo.files
								li
									p
										| file.title
									button(type="button",id="{{file._id}}") {{_ "taskAddFilesToDocs"}}
									br(class="clearFix")
				li.shopping
					i.picto
					h2
						| {{_ "taskServices"}}
					ul
						li
							img(src="../../../IMG/hb_logo.png", alt="")
							p
								| Besoin d'un espace de stockage ?
							a.btn.small(href="http://www.homebox.fr/",target="_blank") {{_ "taskSeeService"}}
							br(class="clearFix")

				if currentTodo.products
					li.shopping
						i.picto
						h2
							| {{_ "taskServices"}}
						ul
							each product in getProducts
								li
									img(src="{{product.imageUrl}}", alt="")
									p
										| {{product.description}}
									if product.price
										p.price {{product.price}} €
									if product.apiProductId
										button(type="button",id="{{product._id}}")
											| {{#unless product.altCallToActionText}}{{_ "taskAddToCart"}} {{else}}{{product.altCallToActionText}}{{/unless}}
									else
										a.btn.small(href="{{product.href}}",target="_blank")
											| {{#unless product.altCallToActionText}}{{_ "taskSeeService"}} {{else}}{{product.altCallToActionText}}{{/unless}}
									br(class="clearFix")


				if currentTodo.videos
					li.videos
						i.picto
						h2
							| {{_ "taskVideos"}}
						ul
							each video in getVideos
								li

										iframe(width="560", height="315", src="{{video.url}}", frameborder="0", allowfullscreen)

										img(src="{{video.url}}")
		footer
			button(type="button" ,class="bckBtn")
				i.fa.fa-step-backward
			button(type="button" id="deleteTodo" data="{{currentTodo._id}}")
				i(class="fa fa-times")
				| {{_ "taskDelete"}}

template(name='todo_friend')
	li
		span.portrait(style="background-image: url({{picture}});")
		p
			| {{name}}{{mail}}
			if isMailOrInvitation
				small
					|- {{state}}
		button.delete
			i.fa.fa-times
		if isPending
			button.resend Relancer
		br.clearFix
